{"version":3,"sources":["dialog-polyfill.js","jquery.flexslider.js"],"names":[],"mappingsfile":"thirdparty.js","sourcesContent":["var dialogPolyfill = (function() {\r\n\r\n  var supportCustomEvent = window.CustomEvent;\r\n  if (!supportCustomEvent || typeof supportCustomEvent == \"object\") {\r\n    supportCustomEvent = function CustomEvent(event, x) {\r\n      x = x || {};\r\n      var ev = document.createEvent('CustomEvent');\r\n      ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);\r\n      return ev;\r\n    };\r\n    supportCustomEvent.prototype = window.Event.prototype;\r\n  }\r\n\r\n  var dialogPolyfill = {};\r\n\r\n  dialogPolyfill.reposition = function(element) {\r\n    var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\r\n    var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;\r\n    element.style.top = Math.max(0, topValue) + 'px';\r\n    element.dialogPolyfillInfo.isTopOverridden = true;\r\n  };\r\n\r\n  dialogPolyfill.inNodeList = function(nodeList, node) {\r\n    for (var i = 0; i < nodeList.length; ++i) {\r\n      if (nodeList[i] == node)\r\n        return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  dialogPolyfill.isInlinePositionSetByStylesheet = function(element) {\r\n    for (var i = 0; i < document.styleSheets.length; ++i) {\r\n      var styleSheet = document.styleSheets[i];\r\n      var cssRules = null;\r\n      // Some browsers throw on cssRules.\r\n      try {\r\n        cssRules = styleSheet.cssRules;\r\n      } catch (e) {}\r\n      if (!cssRules)\r\n        continue;\r\n      for (var j = 0; j < cssRules.length; ++j) {\r\n        var rule = cssRules[j];\r\n        var selectedNodes = null;\r\n        // Ignore errors on invalid selector texts.\r\n        try {\r\n          selectedNodes = document.querySelectorAll(rule.selectorText);\r\n        } catch(e) {}\r\n        if (!selectedNodes || !dialogPolyfill.inNodeList(selectedNodes, element))\r\n          continue;\r\n        var cssTop = rule.style.getPropertyValue('top');\r\n        var cssBottom = rule.style.getPropertyValue('bottom');\r\n        if ((cssTop && cssTop != 'auto') || (cssBottom && cssBottom != 'auto'))\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  dialogPolyfill.needsCentering = function(dialog) {\r\n    var computedStyle = window.getComputedStyle(dialog);\r\n    if (computedStyle.position != 'absolute') {\r\n      return false;\r\n    }\r\n\r\n    // We must determine whether the top/bottom specified value is non-auto.  In\r\n    // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but\r\n    // Firefox returns the used value. So we do this crazy thing instead: check\r\n    // the inline style and then go through CSS rules.\r\n    if ((dialog.style.top != 'auto' && dialog.style.top != '') ||\r\n        (dialog.style.bottom != 'auto' && dialog.style.bottom != ''))\r\n      return false;\r\n    return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);\r\n  };\r\n\r\n  dialogPolyfill.showDialog = function(isModal) {\r\n    if (this.open) {\r\n      throw 'InvalidStateError: showDialog called on open dialog';\r\n    }\r\n    this.open = true;\r\n    this.setAttribute('open', 'open');\r\n\r\n    if (isModal) {\r\n      // Find element with `autofocus` attribute or first form control\r\n      var first_form_ctrl = null;\r\n      var autofocus = null;\r\n      var findElementToFocus = function(root) {\r\n        if (!root.children) {\r\n          return;\r\n        }\r\n        for (var i = 0; i < root.children.length; i++) {\r\n          var elem = root.children[i];\r\n          if (first_form_ctrl === null && !elem.disabled && (\r\n              elem.nodeName == 'BUTTON' ||\r\n              elem.nodeName == 'INPUT'  ||\r\n              elem.nodeName == 'KEYGEN' ||\r\n              elem.nodeName == 'SELECT' ||\r\n              elem.nodeName == 'TEXTAREA')) {\r\n            first_form_ctrl = elem;\r\n          }\r\n          if (elem.autofocus) {\r\n            autofocus = elem;\r\n            return;\r\n          }\r\n          findElementToFocus(elem);\r\n          if (autofocus !== null) return;\r\n        }\r\n      };\r\n\r\n      findElementToFocus(this);\r\n\r\n      if (autofocus !== null) {\r\n        autofocus.focus();\r\n      } else if (first_form_ctrl !== null) {\r\n        first_form_ctrl.focus();\r\n      }\r\n    }\r\n\r\n    if (dialogPolyfill.needsCentering(this))\r\n      dialogPolyfill.reposition(this);\r\n    if (isModal) {\r\n      this.dialogPolyfillInfo.modal = true;\r\n      dialogPolyfill.dm.pushDialog(this);\r\n    }\r\n\r\n    // IE sometimes complains when calling .focus() that it\r\n    // \"Can't move focus to the control because it is invisible, not enabled, or of a type that does not accept the focus.\"\r\n    try {\r\n      if (autofocus !== null) {\r\n        autofocus.focus();\r\n      } else if (first_form_ctrl !== null) {\r\n        first_form_ctrl.focus();\r\n      }\r\n    } catch(e) {}\r\n    this.style.zoom = 1;\r\n  };\r\n\r\n  dialogPolyfill.close = function(retval) {\r\n    if (!this.open && !window.HTMLDialogElement) {\r\n      // Native implementations will set .open to false, so ignore this error.\r\n      throw 'InvalidStateError: close called on closed dialog';\r\n    }\r\n    this.open = false;\r\n    this.removeAttribute('open');\r\n\r\n    // Leave returnValue untouched in case it was set directly on the element\r\n    if (typeof retval != 'undefined') {\r\n      this.returnValue = retval;\r\n    }\r\n\r\n    // This won't match the native <dialog> exactly because if the user sets top\r\n    // on a centered polyfill dialog, that top gets thrown away when the dialog is\r\n    // closed. Not sure it's possible to polyfill this perfectly.\r\n    if (this.dialogPolyfillInfo.isTopOverridden) {\r\n      this.style.top = 'auto';\r\n    }\r\n\r\n    if (this.dialogPolyfillInfo.modal) {\r\n      dialogPolyfill.dm.removeDialog(this);\r\n    }\r\n\r\n    // Triggering \"close\" event for any attached listeners on the <dialog>\r\n    var event;\r\n    if (document.createEvent) {\r\n      event = document.createEvent('HTMLEvents');\r\n      event.initEvent('close', true, true);\r\n    } else {\r\n      event = new Event('close');\r\n    }\r\n    this.dispatchEvent(event);\r\n\r\n    return this.returnValue;\r\n  };\r\n\r\n  dialogPolyfill.registerDialog = function(element) {\r\n    if (element.show) {\r\n      console.warn(\"This browser already supports <dialog>, the polyfill \" +\r\n          \"may not work correctly.\");\r\n    }\r\n    element.addEventListener('dialog_submit', function(e) {\r\n      element.close(e.detail.target.value);\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    });\r\n\r\n    element.show = dialogPolyfill.showDialog.bind(element, false);\r\n    element.showModal = dialogPolyfill.showDialog.bind(element, true);\r\n    element.close = dialogPolyfill.close.bind(element);\r\n    element.dialogPolyfillInfo = {};\r\n  };\r\n\r\n  // The overlay is used to simulate how a modal dialog blocks the document. The\r\n  // blocking dialog is positioned on top of the overlay, and the rest of the\r\n  // dialogs on the pending dialog stack are positioned below it. In the actual\r\n  // implementation, the modal dialog stacking is controlled by the top layer,\r\n  // where z-index has no effect.\r\n  var TOP_LAYER_ZINDEX = 100000;\r\n  var MAX_PENDING_DIALOGS = 100000;\r\n\r\n  dialogPolyfill.DialogManager = function() {\r\n    this.pendingDialogStack = [];\r\n    this.overlay = document.createElement('div');\r\n    this.overlay.style.width = '100%';\r\n    this.overlay.style.height = '100%';\r\n    this.overlay.style.position = 'fixed';\r\n    this.overlay.style.left = '0px';\r\n    this.overlay.style.top = '0px';\r\n    this.overlay.style.backgroundColor = 'rgba(0,0,0,0.0)';\r\n\r\n    this.focusPageLast = this.createFocusable();\r\n    this.overlay.appendChild(this.focusPageLast);\r\n\r\n    this.overlay.addEventListener('click', function(e) {\r\n      var redirectedEvent = document.createEvent('MouseEvents');\r\n      redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\r\n          e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\r\n          e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\r\n      document.body.dispatchEvent(redirectedEvent);\r\n    });\r\n    window.addEventListener('load', function() {\r\n      var forms = document.getElementsByTagName('form'),\r\n      i = forms.length;\r\n      while(i--) {\r\n        (function(form) {\r\n          if (form.getAttribute('method') == 'dialog') { // form.method won't return 'dialog'\r\n            form.addEventListener('click', function(e) {\r\n              if (e.target.type == 'submit') {\r\n                var event = new supportCustomEvent('dialog_submit', {\r\n                  bubbles: true,\r\n                  detail: { target: e.target }\r\n                });\r\n                this.dispatchEvent(event);\r\n                e.preventDefault();\r\n              }\r\n            });\r\n          }\r\n        })(forms[i]);\r\n      }\r\n    })\r\n  };\r\n\r\n  dialogPolyfill.DialogManager.prototype.createFocusable = function(tabIndex) {\r\n    var span = document.createElement('span');\r\n    span.tabIndex = tabIndex || 0;\r\n    span.style.opacity = 0;\r\n    span.style.position = 'static';\r\n    return span;\r\n  };\r\n\r\n  dialogPolyfill.DialogManager.prototype.blockDocument = function() {\r\n    if (!document.body.contains(this.overlay)) {\r\n      document.body.appendChild(this.overlay);\r\n\r\n      // On Safari/Mac (and possibly other browsers), the documentElement is\r\n      // not focusable. This is required for modal dialogs as it is the first\r\n      // element to be hit by a tab event, and further tabs are redirected to\r\n      // the most visible dialog.\r\n      if (this.needsDocumentElementFocus === undefined) {\r\n        document.documentElement.focus();\r\n        this.needsDocumentElementFocus =\r\n            (document.activeElement != document.documentElement);\r\n      }\r\n      if (this.needsDocumentElementFocus) {\r\n        document.documentElement.tabIndex = 1;\r\n      }\r\n    }\r\n  };\r\n\r\n  dialogPolyfill.DialogManager.prototype.unblockDocument = function() {\r\n    document.body.removeChild(this.overlay);\r\n    if (this.needsDocumentElementFocus) {\r\n      // TODO: Restore the previous tabIndex, rather than clearing it.\r\n      document.documentElement.tabIndex = '';\r\n    }\r\n  };\r\n\r\n  dialogPolyfill.DialogManager.prototype.updateStacking = function() {\r\n    if (this.pendingDialogStack.length == 0) {\r\n      this.unblockDocument();\r\n      return;\r\n    }\r\n    this.blockDocument();\r\n\r\n    var zIndex = TOP_LAYER_ZINDEX;\r\n    for (var i = 0; i < this.pendingDialogStack.length; i++) {\r\n      if (i == this.pendingDialogStack.length - 1)\r\n        this.overlay.style.zIndex = zIndex++;\r\n      var dialog = this.pendingDialogStack[i];\r\n      dialog.dialogPolyfillInfo.backdrop.style.zIndex = zIndex++;\r\n      dialog.style.zIndex = zIndex++;\r\n    }\r\n  };\r\n\r\n  dialogPolyfill.DialogManager.prototype.handleKey = function(event) {\r\n    var dialogCount = this.pendingDialogStack.length;\r\n    if (dialogCount == 0) {\r\n      return;\r\n    }\r\n    var dialog = this.pendingDialogStack[dialogCount - 1];\r\n    var pfi = dialog.dialogPolyfillInfo;\r\n\r\n    switch (event.keyCode) {\r\n    case 9: /* tab */\r\n      var activeElement = document.activeElement;\r\n      var forward = !event.shiftKey;\r\n      if (forward) {\r\n        // Tab forward, so look for document or fake last focus element.\r\n        if (activeElement == document.documentElement ||\r\n            activeElement == document.body ||\r\n            activeElement == pfi.backdrop) {\r\n          pfi.focusFirst.focus();\r\n        } else if (activeElement == pfi.focusLast) {\r\n          // TODO: Instead of wrapping to focusFirst, escape to browser chrome.\r\n          pfi.focusFirst.focus();\r\n        }\r\n      } else {\r\n        // Tab backwards, so look for fake first focus element.\r\n        if (activeElement == pfi.focusFirst) {\r\n          // TODO: Instead of wrapping to focusLast, escape to browser chrome.\r\n          pfi.focusLast.focus();\r\n        } else if (activeElement == this.focusPageLast) {\r\n          // The focus element is at the end of the page (e.g., shift-tab from\r\n          // the window chrome): move current focus to the last element in the\r\n          // dialog instead.\r\n          pfi.focusLast.focus();\r\n        }\r\n      }\r\n      break;\r\n\r\n    case 27: /* esc */\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      var cancelEvent = new supportCustomEvent('cancel', {\r\n        bubbles: false,\r\n        cancelable: true\r\n      });\r\n      if (dialog.dispatchEvent(cancelEvent)) {\r\n        dialog.close();\r\n      }\r\n      break;\r\n\r\n    }\r\n  };\r\n\r\n  dialogPolyfill.DialogManager.prototype.pushDialog = function(dialog) {\r\n    if (this.pendingDialogStack.length >= MAX_PENDING_DIALOGS) {\r\n      throw \"Too many modal dialogs\";\r\n    }\r\n\r\n    var backdrop = document.createElement('div');\r\n    backdrop.className = 'backdrop';\r\n    var clickEventListener = function(e) {\r\n      var redirectedEvent = document.createEvent('MouseEvents');\r\n      redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\r\n          e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\r\n          e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\r\n      dialog.dispatchEvent(redirectedEvent);\r\n    };\r\n    backdrop.addEventListener('click', clickEventListener);\r\n    dialog.parentNode.insertBefore(backdrop, dialog.nextSibling);\r\n    dialog.dialogPolyfillInfo.backdrop = backdrop;\r\n    dialog.dialogPolyfillInfo.clickEventListener = clickEventListener;\r\n    this.pendingDialogStack.push(dialog);\r\n    this.updateStacking();\r\n\r\n    dialog.dialogPolyfillInfo.focusFirst = this.createFocusable();\r\n    dialog.dialogPolyfillInfo.focusLast = this.createFocusable();\r\n    dialog.appendChild(dialog.dialogPolyfillInfo.focusLast);\r\n    dialog.insertBefore(\r\n        dialog.dialogPolyfillInfo.focusFirst, dialog.firstChild);\r\n  };\r\n\r\n  dialogPolyfill.DialogManager.prototype.removeDialog = function(dialog) {\r\n    var index = this.pendingDialogStack.indexOf(dialog);\r\n    if (index == -1) {\r\n      return;\r\n    }\r\n    this.pendingDialogStack.splice(index, 1);\r\n    var backdrop = dialog.dialogPolyfillInfo.backdrop;\r\n    var clickEventListener = dialog.dialogPolyfillInfo.clickEventListener;\r\n    backdrop.removeEventListener('click', clickEventListener);\r\n    backdrop.parentNode.removeChild(backdrop);\r\n    dialog.dialogPolyfillInfo.backdrop = null;\r\n    dialog.dialogPolyfillInfo.clickEventListener = null;\r\n    this.updateStacking();\r\n\r\n    dialog.removeChild(dialog.dialogPolyfillInfo.focusFirst);\r\n    dialog.removeChild(dialog.dialogPolyfillInfo.focusLast);\r\n    dialog.dialogPolyfillInfo.focusFirst = null;\r\n    dialog.dialogPolyfillInfo.focusLast = null;\r\n  };\r\n\r\n  dialogPolyfill.dm = new dialogPolyfill.DialogManager();\r\n\r\n  document.addEventListener('keydown',\r\n      dialogPolyfill.dm.handleKey.bind(dialogPolyfill.dm));\r\n\r\n  return dialogPolyfill;\r\n})();\t","/* global jQuery */\r\n/*\r\n * jQuery FlexSlider v2.4.0\r\n * Copyright 2012 WooThemes\r\n * Contributing Author: Tyler Smith\r\n */\r\n;\r\n(function ($) {\r\n\r\n  //FlexSlider: Object Instance\r\n  $.flexslider = function(el, options) {\r\n    var slider = $(el);\r\n\r\n    // making variables public\r\n    slider.vars = $.extend({}, $.flexslider.defaults, options);\r\n\r\n    var namespace = slider.vars.namespace,\r\n        msGesture = window.navigator && window.navigator.msPointerEnabled && window.MSGesture,\r\n        touch = (( \"ontouchstart\" in window ) || msGesture || window.DocumentTouch && document instanceof DocumentTouch) && slider.vars.touch,\r\n        // depricating this idea, as devices are being released with both of these events\r\n        //eventType = (touch) ? \"touchend\" : \"click\",\r\n        eventType = \"click touchend MSPointerUp keyup\",\r\n        watchedEvent = \"\",\r\n        watchedEventClearTimer,\r\n        vertical = slider.vars.direction === \"vertical\",\r\n        reverse = slider.vars.reverse,\r\n        carousel = (slider.vars.itemWidth > 0),\r\n        fade = slider.vars.animation === \"fade\",\r\n        asNav = slider.vars.asNavFor !== \"\",\r\n        methods = {},\r\n        focused = true;\r\n\r\n    // Store a reference to the slider object\r\n    $.data(el, \"flexslider\", slider);\r\n\r\n    // Private slider methods\r\n    methods = {\r\n      init: function() {\r\n        slider.animating = false;\r\n        // Get current slide and make sure it is a number\r\n        slider.currentSlide = parseInt( ( slider.vars.startAt ? slider.vars.startAt : 0), 10 );\r\n        if ( isNaN( slider.currentSlide ) ) { slider.currentSlide = 0; }\r\n        slider.animatingTo = slider.currentSlide;\r\n        slider.atEnd = (slider.currentSlide === 0 || slider.currentSlide === slider.last);\r\n        slider.containerSelector = slider.vars.selector.substr(0,slider.vars.selector.search(' '));\r\n        slider.slides = $(slider.vars.selector, slider);\r\n        slider.container = $(slider.containerSelector, slider);\r\n        slider.count = slider.slides.length;\r\n        // SYNC:\r\n        slider.syncExists = $(slider.vars.sync).length > 0;\r\n        // SLIDE:\r\n        if (slider.vars.animation === \"slide\") { slider.vars.animation = \"swing\"; }\r\n        slider.prop = (vertical) ? \"top\" : \"marginLeft\";\r\n        slider.args = {};\r\n        // SLIDESHOW:\r\n        slider.manualPause = false;\r\n        slider.stopped = false;\r\n        //PAUSE WHEN INVISIBLE\r\n        slider.started = false;\r\n        slider.startTimeout = null;\r\n        // TOUCH/USECSS:\r\n        slider.transitions = !slider.vars.video && !fade && slider.vars.useCSS && (function() {\r\n          var obj = document.createElement('div'),\r\n              props = ['perspectiveProperty', 'WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];\r\n          for (var i in props) {\r\n            if ( obj.style[ props[i] ] !== undefined ) {\r\n              slider.pfx = props[i].replace('Perspective','').toLowerCase();\r\n              slider.prop = \"-\" + slider.pfx + \"-transform\";\r\n              return true;\r\n            }\r\n          }\r\n          return false;\r\n        }());\r\n        slider.ensureAnimationEnd = '';\r\n        // CONTROLSCONTAINER:\r\n        if (slider.vars.controlsContainer !== \"\") slider.controlsContainer = $(slider.vars.controlsContainer).length > 0 && $(slider.vars.controlsContainer);\r\n        // MANUAL:\r\n        if (slider.vars.manualControls !== \"\") slider.manualControls = $(slider.vars.manualControls).length > 0 && $(slider.vars.manualControls);\r\n\r\n        // RANDOMIZE:\r\n        if (slider.vars.randomize) {\r\n          slider.slides.sort(function() { return (Math.round(Math.random())-0.5); });\r\n          slider.container.empty().append(slider.slides);\r\n        }\r\n\r\n        slider.doMath();\r\n\r\n        // INIT\r\n        slider.setup(\"init\");\r\n\r\n        // CONTROLNAV:\r\n        if (slider.vars.controlNav) { methods.controlNav.setup(); }\r\n\r\n        // DIRECTIONNAV:\r\n        if (slider.vars.directionNav) { methods.directionNav.setup(); }\r\n\r\n        // KEYBOARD:\r\n        if (slider.vars.keyboard && ($(slider.containerSelector).length === 1 || slider.vars.multipleKeyboard)) {\r\n          $(document).bind('keyup', function(event) {\r\n            var keycode = event.keyCode;\r\n            if (!slider.animating && (keycode === 39 || keycode === 37)) {\r\n              var target = (keycode === 39) ? slider.getTarget('next') :\r\n                           (keycode === 37) ? slider.getTarget('prev') : false;\r\n              slider.flexAnimate(target, slider.vars.pauseOnAction);\r\n            }\r\n          });\r\n        }\r\n        // MOUSEWHEEL:\r\n        if (slider.vars.mousewheel) {\r\n          slider.bind('mousewheel', function(event, delta, deltaX, deltaY) {\r\n            event.preventDefault();\r\n            var target = (delta < 0) ? slider.getTarget('next') : slider.getTarget('prev');\r\n            slider.flexAnimate(target, slider.vars.pauseOnAction);\r\n          });\r\n        }\r\n\r\n        // PAUSEPLAY\r\n        if (slider.vars.pausePlay) { methods.pausePlay.setup(); }\r\n\r\n        //PAUSE WHEN INVISIBLE\r\n        if (slider.vars.slideshow && slider.vars.pauseInvisible) { methods.pauseInvisible.init(); }\r\n\r\n        // SLIDSESHOW\r\n        if (slider.vars.slideshow) {\r\n          if (slider.vars.pauseOnHover) {\r\n            slider.hover(function() {\r\n              if (!slider.manualPlay && !slider.manualPause) { slider.pause(); }\r\n            }, function() {\r\n              if (!slider.manualPause && !slider.manualPlay && !slider.stopped) { slider.play(); }\r\n            });\r\n          }\r\n          // initialize animation\r\n          //If we're visible, or we don't use PageVisibility API\r\n          if(!slider.vars.pauseInvisible || !methods.pauseInvisible.isHidden()) {\r\n            (slider.vars.initDelay > 0) ? slider.startTimeout = setTimeout(slider.play, slider.vars.initDelay) : slider.play();\r\n          }\r\n        }\r\n\r\n        // ASNAV:\r\n        if (asNav) { methods.asNav.setup(); }\r\n\r\n        // TOUCH\r\n        if (touch && slider.vars.touch) { methods.touch(); }\r\n\r\n        // FADE&&SMOOTHHEIGHT || SLIDE:\r\n        if (!fade || (fade && slider.vars.smoothHeight)) { $(window).bind(\"resize orientationchange focus\", methods.resize); }\r\n\r\n        slider.find(\"img\").attr(\"draggable\", \"false\");\r\n\r\n        // API: start() Callback\r\n        setTimeout(function(){\r\n          slider.vars.start(slider);\r\n        }, 200);\r\n      },\r\n      asNav: {\r\n        setup: function() {\r\n          slider.asNav = true;\r\n          slider.animatingTo = Math.floor(slider.currentSlide/slider.move);\r\n          slider.currentItem = slider.currentSlide;\r\n          slider.slides.removeClass(namespace + \"active-slide\").eq(slider.currentItem).addClass(namespace + \"active-slide\");\r\n          if(!msGesture){\r\n              slider.slides.on(eventType, function(e){\r\n                e.preventDefault();\r\n                var $slide = $(this),\r\n                    target = $slide.index();\r\n                var posFromLeft = $slide.offset().left - $(slider).scrollLeft(); // Find position of slide relative to left of slider container\r\n                if( posFromLeft <= 0 && $slide.hasClass( namespace + 'active-slide' ) ) {\r\n                  slider.flexAnimate(slider.getTarget(\"prev\"), true);\r\n                } else if (!$(slider.vars.asNavFor).data('flexslider').animating && !$slide.hasClass(namespace + \"active-slide\")) {\r\n                  slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";\r\n                  slider.flexAnimate(target, slider.vars.pauseOnAction, false, true, true);\r\n                }\r\n              });\r\n          }else{\r\n              el._slider = slider;\r\n              slider.slides.each(function (){\r\n                  var that = this;\r\n                  that._gesture = new MSGesture();\r\n                  that._gesture.target = that;\r\n                  that.addEventListener(\"MSPointerDown\", function (e){\r\n                      e.preventDefault();\r\n                      if(e.currentTarget._gesture) {\r\n                        e.currentTarget._gesture.addPointer(e.pointerId);\r\n                      }\r\n                  }, false);\r\n                  that.addEventListener(\"MSGestureTap\", function (e){\r\n                      e.preventDefault();\r\n                      var $slide = $(this),\r\n                          target = $slide.index();\r\n                      if (!$(slider.vars.asNavFor).data('flexslider').animating && !$slide.hasClass('active')) {\r\n                          slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";\r\n                          slider.flexAnimate(target, slider.vars.pauseOnAction, false, true, true);\r\n                      }\r\n                  });\r\n              });\r\n          }\r\n        }\r\n      },\r\n      controlNav: {\r\n        setup: function() {\r\n          if (!slider.manualControls) {\r\n            methods.controlNav.setupPaging();\r\n          } else { // MANUALCONTROLS:\r\n            methods.controlNav.setupManual();\r\n          }\r\n        },\r\n        setupPaging: function() {\r\n          var type = (slider.vars.controlNav === \"thumbnails\") ? 'control-thumbs' : 'control-paging',\r\n              j = 1,\r\n              item,\r\n              slide;\r\n\r\n          slider.controlNavScaffold = $('<ol class=\"'+ namespace + 'control-nav ' + namespace + type + '\"></ol>');\r\n\r\n          if (slider.pagingCount > 1) {\r\n            for (var i = 0; i < slider.pagingCount; i++) {\r\n              slide = slider.slides.eq(i);\r\n              item = (slider.vars.controlNav === \"thumbnails\") ? '<img src=\"' + slide.attr( 'data-thumb' ) + '\"/>' : '<a>' + j + '</a>';\r\n              if ( 'thumbnails' === slider.vars.controlNav && true === slider.vars.thumbCaptions ) {\r\n                var captn = slide.attr( 'data-thumbcaption' );\r\n                if ( '' != captn && undefined != captn ) { item += '<span class=\"' + namespace + 'caption\">' + captn + '</span>'; }\r\n              }\r\n              slider.controlNavScaffold.append('<li>' + item + '</li>');\r\n              j++;\r\n            }\r\n          }\r\n\r\n          // CONTROLSCONTAINER:\r\n          (slider.controlsContainer) ? $(slider.controlsContainer).append(slider.controlNavScaffold) : slider.append(slider.controlNavScaffold);\r\n          methods.controlNav.set();\r\n\r\n          methods.controlNav.active();\r\n\r\n          slider.controlNavScaffold.delegate('a, img', eventType, function(event) {\r\n            event.preventDefault();\r\n\r\n            if (watchedEvent === \"\" || watchedEvent === event.type) {\r\n              var $this = $(this),\r\n                  target = slider.controlNav.index($this);\r\n\r\n              if (!$this.hasClass(namespace + 'active')) {\r\n                slider.direction = (target > slider.currentSlide) ? \"next\" : \"prev\";\r\n                slider.flexAnimate(target, slider.vars.pauseOnAction);\r\n              }\r\n            }\r\n\r\n            // setup flags to prevent event duplication\r\n            if (watchedEvent === \"\") {\r\n              watchedEvent = event.type;\r\n            }\r\n            methods.setToClearWatchedEvent();\r\n\r\n          });\r\n        },\r\n        setupManual: function() {\r\n          slider.controlNav = slider.manualControls;\r\n          methods.controlNav.active();\r\n\r\n          slider.controlNav.bind(eventType, function(event) {\r\n            event.preventDefault();\r\n\r\n            if (watchedEvent === \"\" || watchedEvent === event.type) {\r\n              var $this = $(this),\r\n                  target = slider.controlNav.index($this);\r\n\r\n              if (!$this.hasClass(namespace + 'active')) {\r\n                (target > slider.currentSlide) ? slider.direction = \"next\" : slider.direction = \"prev\";\r\n                slider.flexAnimate(target, slider.vars.pauseOnAction);\r\n              }\r\n            }\r\n\r\n            // setup flags to prevent event duplication\r\n            if (watchedEvent === \"\") {\r\n              watchedEvent = event.type;\r\n            }\r\n            methods.setToClearWatchedEvent();\r\n          });\r\n        },\r\n        set: function() {\r\n          var selector = (slider.vars.controlNav === \"thumbnails\") ? 'img' : 'a';\r\n          slider.controlNav = $('.' + namespace + 'control-nav li ' + selector, (slider.controlsContainer) ? slider.controlsContainer : slider);\r\n        },\r\n        active: function() {\r\n          slider.controlNav.removeClass(namespace + \"active\").eq(slider.animatingTo).addClass(namespace + \"active\");\r\n        },\r\n        update: function(action, pos) {\r\n          if (slider.pagingCount > 1 && action === \"add\") {\r\n            slider.controlNavScaffold.append($('<li><a>' + slider.count + '</a></li>'));\r\n          } else if (slider.pagingCount === 1) {\r\n            slider.controlNavScaffold.find('li').remove();\r\n          } else {\r\n            slider.controlNav.eq(pos).closest('li').remove();\r\n          }\r\n          methods.controlNav.set();\r\n          (slider.pagingCount > 1 && slider.pagingCount !== slider.controlNav.length) ? slider.update(pos, action) : methods.controlNav.active();\r\n        }\r\n      },\r\n      directionNav: {\r\n        setup: function() {\r\n          var directionNavScaffold = $('<ul class=\"' + namespace + 'direction-nav\"><li class=\"' + namespace + 'nav-prev\"><a class=\"' + namespace + 'prev\" href=\"#\">' + slider.vars.prevText + '</a></li><li class=\"' + namespace + 'nav-next\"><a class=\"' + namespace + 'next\" href=\"#\">' + slider.vars.nextText + '</a></li></ul>');\r\n\r\n          // CONTROLSCONTAINER:\r\n          if (slider.controlsContainer) {\r\n            $(slider.controlsContainer).append(directionNavScaffold);\r\n            slider.directionNav = $('.' + namespace + 'direction-nav li a', slider.controlsContainer);\r\n          } else {\r\n            slider.append(directionNavScaffold);\r\n            slider.directionNav = $('.' + namespace + 'direction-nav li a', slider);\r\n          }\r\n\r\n          methods.directionNav.update();\r\n\r\n          slider.directionNav.bind(eventType, function(event) {\r\n            event.preventDefault();\r\n            var target;\r\n\r\n            if (watchedEvent === \"\" || watchedEvent === event.type) {\r\n              target = ($(this).hasClass(namespace + 'next')) ? slider.getTarget('next') : slider.getTarget('prev');\r\n              slider.flexAnimate(target, slider.vars.pauseOnAction);\r\n            }\r\n\r\n            // setup flags to prevent event duplication\r\n            if (watchedEvent === \"\") {\r\n              watchedEvent = event.type;\r\n            }\r\n            methods.setToClearWatchedEvent();\r\n          });\r\n        },\r\n        update: function() {\r\n          var disabledClass = namespace + 'disabled';\r\n          if (slider.pagingCount === 1) {\r\n            slider.directionNav.addClass(disabledClass).attr('tabindex', '-1');\r\n          } else if (!slider.vars.animationLoop) {\r\n            if (slider.animatingTo === 0) {\r\n              slider.directionNav.removeClass(disabledClass).filter('.' + namespace + \"prev\").addClass(disabledClass).attr('tabindex', '-1');\r\n            } else if (slider.animatingTo === slider.last) {\r\n              slider.directionNav.removeClass(disabledClass).filter('.' + namespace + \"next\").addClass(disabledClass).attr('tabindex', '-1');\r\n            } else {\r\n              slider.directionNav.removeClass(disabledClass).removeAttr('tabindex');\r\n            }\r\n          } else {\r\n            slider.directionNav.removeClass(disabledClass).removeAttr('tabindex');\r\n          }\r\n        }\r\n      },\r\n      pausePlay: {\r\n        setup: function() {\r\n          var pausePlayScaffold = $('<div class=\"' + namespace + 'pauseplay\"><a></a></div>');\r\n\r\n          // CONTROLSCONTAINER:\r\n          if (slider.controlsContainer) {\r\n            slider.controlsContainer.append(pausePlayScaffold);\r\n            slider.pausePlay = $('.' + namespace + 'pauseplay a', slider.controlsContainer);\r\n          } else {\r\n            slider.append(pausePlayScaffold);\r\n            slider.pausePlay = $('.' + namespace + 'pauseplay a', slider);\r\n          }\r\n\r\n          methods.pausePlay.update((slider.vars.slideshow) ? namespace + 'pause' : namespace + 'play');\r\n\r\n          slider.pausePlay.bind(eventType, function(event) {\r\n            event.preventDefault();\r\n\r\n            if (watchedEvent === \"\" || watchedEvent === event.type) {\r\n              if ($(this).hasClass(namespace + 'pause')) {\r\n                slider.manualPause = true;\r\n                slider.manualPlay = false;\r\n                slider.pause();\r\n              } else {\r\n                slider.manualPause = false;\r\n                slider.manualPlay = true;\r\n                slider.play();\r\n              }\r\n            }\r\n\r\n            // setup flags to prevent event duplication\r\n            if (watchedEvent === \"\") {\r\n              watchedEvent = event.type;\r\n            }\r\n            methods.setToClearWatchedEvent();\r\n          });\r\n        },\r\n        update: function(state) {\r\n          (state === \"play\") ? slider.pausePlay.removeClass(namespace + 'pause').addClass(namespace + 'play').html(slider.vars.playText) : slider.pausePlay.removeClass(namespace + 'play').addClass(namespace + 'pause').html(slider.vars.pauseText);\r\n        }\r\n      },\r\n      touch: function() {\r\n        var startX,\r\n          startY,\r\n          offset,\r\n          cwidth,\r\n          dx,\r\n          startT,\r\n          scrolling = false,\r\n          localX = 0,\r\n          localY = 0,\r\n          accDx = 0;\r\n\r\n        if(!msGesture){\r\n            el.addEventListener('touchstart', onTouchStart, false);\r\n\r\n            function onTouchStart(e) {\r\n              if (slider.animating) {\r\n                e.preventDefault();\r\n              } else if ( ( window.navigator.msPointerEnabled ) || e.touches.length === 1 ) {\r\n                slider.pause();\r\n                // CAROUSEL:\r\n                cwidth = (vertical) ? slider.h : slider. w;\r\n                startT = Number(new Date());\r\n                // CAROUSEL:\r\n\r\n                // Local vars for X and Y points.\r\n                localX = e.touches[0].pageX;\r\n                localY = e.touches[0].pageY;\r\n\r\n                offset = (carousel && reverse && slider.animatingTo === slider.last) ? 0 :\r\n                         (carousel && reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :\r\n                         (carousel && slider.currentSlide === slider.last) ? slider.limit :\r\n                         (carousel) ? ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.currentSlide :\r\n                         (reverse) ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth;\r\n                startX = (vertical) ? localY : localX;\r\n                startY = (vertical) ? localX : localY;\r\n\r\n                el.addEventListener('touchmove', onTouchMove, false);\r\n                el.addEventListener('touchend', onTouchEnd, false);\r\n              }\r\n            }\r\n\r\n            function onTouchMove(e) {\r\n              // Local vars for X and Y points.\r\n\r\n              localX = e.touches[0].pageX;\r\n              localY = e.touches[0].pageY;\r\n\r\n              dx = (vertical) ? startX - localY : startX - localX;\r\n              scrolling = (vertical) ? (Math.abs(dx) < Math.abs(localX - startY)) : (Math.abs(dx) < Math.abs(localY - startY));\r\n\r\n              var fxms = 500;\r\n\r\n              if ( ! scrolling || Number( new Date() ) - startT > fxms ) {\r\n                e.preventDefault();\r\n                if (!fade && slider.transitions) {\r\n                  if (!slider.vars.animationLoop) {\r\n                    dx = dx/((slider.currentSlide === 0 && dx < 0 || slider.currentSlide === slider.last && dx > 0) ? (Math.abs(dx)/cwidth+2) : 1);\r\n                  }\r\n                  slider.setProps(offset + dx, \"setTouch\");\r\n                }\r\n              }\r\n            }\r\n\r\n            function onTouchEnd(e) {\r\n              // finish the touch by undoing the touch session\r\n              el.removeEventListener('touchmove', onTouchMove, false);\r\n\r\n              if (slider.animatingTo === slider.currentSlide && !scrolling && !(dx === null)) {\r\n                var updateDx = (reverse) ? -dx : dx,\r\n                    target = (updateDx > 0) ? slider.getTarget('next') : slider.getTarget('prev');\r\n\r\n                if (slider.canAdvance(target) && (Number(new Date()) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth/2)) {\r\n                  slider.flexAnimate(target, slider.vars.pauseOnAction);\r\n                } else {\r\n                  if (!fade) { slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, true); }\r\n                }\r\n              }\r\n              el.removeEventListener('touchend', onTouchEnd, false);\r\n\r\n              startX = null;\r\n              startY = null;\r\n              dx = null;\r\n              offset = null;\r\n            }\r\n        }else{\r\n            el.style.msTouchAction = \"none\";\r\n            el._gesture = new MSGesture();\r\n            el._gesture.target = el;\r\n            el.addEventListener(\"MSPointerDown\", onMSPointerDown, false);\r\n            el._slider = slider;\r\n            el.addEventListener(\"MSGestureChange\", onMSGestureChange, false);\r\n            el.addEventListener(\"MSGestureEnd\", onMSGestureEnd, false);\r\n\r\n            function onMSPointerDown(e){\r\n                e.stopPropagation();\r\n                if (slider.animating) {\r\n                    e.preventDefault();\r\n                }else{\r\n                    slider.pause();\r\n                    el._gesture.addPointer(e.pointerId);\r\n                    accDx = 0;\r\n                    cwidth = (vertical) ? slider.h : slider. w;\r\n                    startT = Number(new Date());\r\n                    // CAROUSEL:\r\n\r\n                    offset = (carousel && reverse && slider.animatingTo === slider.last) ? 0 :\r\n                        (carousel && reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :\r\n                            (carousel && slider.currentSlide === slider.last) ? slider.limit :\r\n                                (carousel) ? ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.currentSlide :\r\n                                    (reverse) ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth;\r\n                }\r\n            }\r\n\r\n            function onMSGestureChange(e) {\r\n                e.stopPropagation();\r\n                var slider = e.target._slider;\r\n                if(!slider){\r\n                    return;\r\n                }\r\n                var transX = -e.translationX,\r\n                    transY = -e.translationY;\r\n\r\n                //Accumulate translations.\r\n                accDx = accDx + ((vertical) ? transY : transX);\r\n                dx = accDx;\r\n                scrolling = (vertical) ? (Math.abs(accDx) < Math.abs(-transX)) : (Math.abs(accDx) < Math.abs(-transY));\r\n\r\n                if(e.detail === e.MSGESTURE_FLAG_INERTIA){\r\n                    setImmediate(function (){\r\n                        el._gesture.stop();\r\n                    });\r\n\r\n                    return;\r\n                }\r\n\r\n                if (!scrolling || Number(new Date()) - startT > 500) {\r\n                    e.preventDefault();\r\n                    if (!fade && slider.transitions) {\r\n                        if (!slider.vars.animationLoop) {\r\n                            dx = accDx / ((slider.currentSlide === 0 && accDx < 0 || slider.currentSlide === slider.last && accDx > 0) ? (Math.abs(accDx) / cwidth + 2) : 1);\r\n                        }\r\n                        slider.setProps(offset + dx, \"setTouch\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            function onMSGestureEnd(e) {\r\n                e.stopPropagation();\r\n                var slider = e.target._slider;\r\n                if(!slider){\r\n                    return;\r\n                }\r\n                if (slider.animatingTo === slider.currentSlide && !scrolling && !(dx === null)) {\r\n                    var updateDx = (reverse) ? -dx : dx,\r\n                        target = (updateDx > 0) ? slider.getTarget('next') : slider.getTarget('prev');\r\n\r\n                    if (slider.canAdvance(target) && (Number(new Date()) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth/2)) {\r\n                        slider.flexAnimate(target, slider.vars.pauseOnAction);\r\n                    } else {\r\n                        if (!fade) { slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, true); }\r\n                    }\r\n                }\r\n\r\n                startX = null;\r\n                startY = null;\r\n                dx = null;\r\n                offset = null;\r\n                accDx = 0;\r\n            }\r\n        }\r\n      },\r\n      resize: function() {\r\n        if (!slider.animating && slider.is(':visible')) {\r\n          if (!carousel) { slider.doMath(); }\r\n\r\n          if (fade) {\r\n            // SMOOTH HEIGHT:\r\n            methods.smoothHeight();\r\n          } else if (carousel) { //CAROUSEL:\r\n            slider.slides.width(slider.computedW);\r\n            slider.update(slider.pagingCount);\r\n            slider.setProps();\r\n          }\r\n          else if (vertical) { //VERTICAL:\r\n            slider.viewport.height(slider.h);\r\n            slider.setProps(slider.h, \"setTotal\");\r\n          } else {\r\n            // SMOOTH HEIGHT:\r\n            if (slider.vars.smoothHeight) { methods.smoothHeight(); }\r\n            slider.newSlides.width(slider.computedW);\r\n            slider.setProps(slider.computedW, \"setTotal\");\r\n          }\r\n        }\r\n      },\r\n      smoothHeight: function(dur) {\r\n        if (!vertical || fade) {\r\n          var $obj = (fade) ? slider : slider.viewport;\r\n          (dur) ? $obj.animate({\"height\": slider.slides.eq(slider.animatingTo).height()}, dur) : $obj.height(slider.slides.eq(slider.animatingTo).height());\r\n        }\r\n      },\r\n      sync: function(action) {\r\n        var $obj = $(slider.vars.sync).data(\"flexslider\"),\r\n            target = slider.animatingTo;\r\n\r\n        switch (action) {\r\n          case \"animate\": $obj.flexAnimate(target, slider.vars.pauseOnAction, false, true); break;\r\n          case \"play\": if (!$obj.playing && !$obj.asNav) { $obj.play(); } break;\r\n          case \"pause\": $obj.pause(); break;\r\n        }\r\n      },\r\n      uniqueID: function($clone) {\r\n        // Append _clone to current level and children elements with id attributes\r\n        $clone.filter( '[id]' ).add($clone.find( '[id]' )).each(function() {\r\n          var $this = $(this);\r\n          $this.attr( 'id', $this.attr( 'id' ) + '_clone' );\r\n        });\r\n        return $clone;\r\n      },\r\n      pauseInvisible: {\r\n        visProp: null,\r\n        init: function() {\r\n          var visProp = methods.pauseInvisible.getHiddenProp();\r\n          if (visProp) {\r\n            var evtname = visProp.replace(/[H|h]idden/,'') + 'visibilitychange';\r\n            document.addEventListener(evtname, function() {\r\n              if (methods.pauseInvisible.isHidden()) {\r\n                if(slider.startTimeout) {\r\n                  clearTimeout(slider.startTimeout); //If clock is ticking, stop timer and prevent from starting while invisible\r\n                } else { \r\n                  slider.pause(); //Or just pause\r\n                }\r\n              }\r\n              else {\r\n                if(slider.started) {\r\n                  slider.play(); //Initiated before, just play\r\n                } else { \r\n                  if (slider.vars.initDelay > 0) { \r\n                    setTimeout(slider.play, slider.vars.initDelay);\r\n                  } else {\r\n                    slider.play(); //Didn't init before: simply init or wait for it\r\n                  } \r\n                }\r\n              }\r\n            });\r\n          }\r\n        },\r\n        isHidden: function() {\r\n          var prop = methods.pauseInvisible.getHiddenProp();\r\n          if (!prop) {\r\n            return false;\r\n          }\r\n          return document[prop];\r\n        },\r\n        getHiddenProp: function() {\r\n          var prefixes = ['webkit','moz','ms','o'];\r\n          // if 'hidden' is natively supported just return it\r\n          if ('hidden' in document) {\r\n            return 'hidden';\r\n          }\r\n          // otherwise loop over all the known prefixes until we find one\r\n          for ( var i = 0; i < prefixes.length; i++ ) {\r\n              if ((prefixes[i] + 'Hidden') in document) {\r\n                return prefixes[i] + 'Hidden';\r\n              }\r\n          }\r\n          // otherwise it's not supported\r\n          return null;\r\n        }\r\n      },\r\n      setToClearWatchedEvent: function() {\r\n        clearTimeout(watchedEventClearTimer);\r\n        watchedEventClearTimer = setTimeout(function() {\r\n          watchedEvent = \"\";\r\n        }, 3000);\r\n      }\r\n    };\r\n\r\n    // public methods\r\n    slider.flexAnimate = function(target, pause, override, withSync, fromNav) {\r\n      if (!slider.vars.animationLoop && target !== slider.currentSlide) {\r\n        slider.direction = (target > slider.currentSlide) ? \"next\" : \"prev\";\r\n      }\r\n\r\n      if (asNav && slider.pagingCount === 1) slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";\r\n\r\n      if (!slider.animating && (slider.canAdvance(target, fromNav) || override) && slider.is(\":visible\")) {\r\n        if (asNav && withSync) {\r\n          var master = $(slider.vars.asNavFor).data('flexslider');\r\n          slider.atEnd = target === 0 || target === slider.count - 1;\r\n          master.flexAnimate(target, true, false, true, fromNav);\r\n          slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";\r\n          master.direction = slider.direction;\r\n\r\n          if (Math.ceil((target + 1)/slider.visible) - 1 !== slider.currentSlide && target !== 0) {\r\n            slider.currentItem = target;\r\n            slider.slides.removeClass(namespace + \"active-slide\").eq(target).addClass(namespace + \"active-slide\");\r\n            target = Math.floor(target/slider.visible);\r\n          } else {\r\n            slider.currentItem = target;\r\n            slider.slides.removeClass(namespace + \"active-slide\").eq(target).addClass(namespace + \"active-slide\");\r\n            return false;\r\n          }\r\n        }\r\n\r\n        slider.animating = true;\r\n        slider.animatingTo = target;\r\n\r\n        // SLIDESHOW:\r\n        if (pause) { slider.pause(); }\r\n\r\n        // API: before() animation Callback\r\n        slider.vars.before(slider);\r\n\r\n        // SYNC:\r\n        if (slider.syncExists && !fromNav) { methods.sync(\"animate\"); }\r\n\r\n        // CONTROLNAV\r\n        if (slider.vars.controlNav) { methods.controlNav.active(); }\r\n\r\n        // !CAROUSEL:\r\n        // CANDIDATE: slide active class (for add/remove slide)\r\n        if (!carousel) { slider.slides.removeClass(namespace + 'active-slide').eq(target).addClass(namespace + 'active-slide'); }\r\n\r\n        // INFINITE LOOP:\r\n        // CANDIDATE: atEnd\r\n        slider.atEnd = target === 0 || target === slider.last;\r\n\r\n        // DIRECTIONNAV:\r\n        if (slider.vars.directionNav) { methods.directionNav.update(); }\r\n\r\n        if (target === slider.last) {\r\n          // API: end() of cycle Callback\r\n          slider.vars.end(slider);\r\n          // SLIDESHOW && !INFINITE LOOP:\r\n          if (!slider.vars.animationLoop) { slider.pause(); }\r\n        }\r\n\r\n        // SLIDE:\r\n        if (!fade) {\r\n          var dimension = (vertical) ? slider.slides.filter(':first').height() : slider.computedW,\r\n              margin, slideString, calcNext;\r\n\r\n          // INFINITE LOOP / REVERSE:\r\n          if (carousel) {\r\n            //margin = (slider.vars.itemWidth > slider.w) ? slider.vars.itemMargin * 2 : slider.vars.itemMargin;\r\n            margin = slider.vars.itemMargin;\r\n            calcNext = ((slider.itemW + margin) * slider.move) * slider.animatingTo;\r\n            slideString = (calcNext > slider.limit && slider.visible !== 1) ? slider.limit : calcNext;\r\n          } else if (slider.currentSlide === 0 && target === slider.count - 1 && slider.vars.animationLoop && slider.direction !== \"next\") {\r\n            slideString = (reverse) ? (slider.count + slider.cloneOffset) * dimension : 0;\r\n          } else if (slider.currentSlide === slider.last && target === 0 && slider.vars.animationLoop && slider.direction !== \"prev\") {\r\n            slideString = (reverse) ? 0 : (slider.count + 1) * dimension;\r\n          } else {\r\n            slideString = (reverse) ? ((slider.count - 1) - target + slider.cloneOffset) * dimension : (target + slider.cloneOffset) * dimension;\r\n          }\r\n          slider.setProps(slideString, \"\", slider.vars.animationSpeed);\r\n          if (slider.transitions) {\r\n            if (!slider.vars.animationLoop || !slider.atEnd) {\r\n              slider.animating = false;\r\n              slider.currentSlide = slider.animatingTo;\r\n            }\r\n            \r\n            // Unbind previous transitionEnd events and re-bind new transitionEnd event\r\n            slider.container.unbind(\"webkitTransitionEnd transitionend\");\r\n            slider.container.bind(\"webkitTransitionEnd transitionend\", function() {\r\n              clearTimeout(slider.ensureAnimationEnd);\r\n              slider.wrapup(dimension);\r\n            });\r\n\r\n            // Insurance for the ever-so-fickle transitionEnd event\r\n            clearTimeout(slider.ensureAnimationEnd);\r\n            slider.ensureAnimationEnd = setTimeout(function() {\r\n              slider.wrapup(dimension);\r\n            }, slider.vars.animationSpeed + 100);\r\n\r\n          } else {\r\n            slider.container.animate(slider.args, slider.vars.animationSpeed, slider.vars.easing, function(){\r\n              slider.wrapup(dimension);\r\n            });\r\n          }\r\n        } else { // FADE:\r\n          if (!touch) {\r\n            //slider.slides.eq(slider.currentSlide).fadeOut(slider.vars.animationSpeed, slider.vars.easing);\r\n            //slider.slides.eq(target).fadeIn(slider.vars.animationSpeed, slider.vars.easing, slider.wrapup);\r\n\r\n            slider.slides.eq(slider.currentSlide).css({\"zIndex\": 1}).animate({\"opacity\": 0}, slider.vars.animationSpeed, slider.vars.easing);\r\n            slider.slides.eq(target).css({\"zIndex\": 2}).animate({\"opacity\": 1}, slider.vars.animationSpeed, slider.vars.easing, slider.wrapup);\r\n\r\n          } else {\r\n            slider.slides.eq(slider.currentSlide).css({ \"opacity\": 0, \"zIndex\": 1 });\r\n            slider.slides.eq(target).css({ \"opacity\": 1, \"zIndex\": 2 });\r\n            slider.wrapup(dimension);\r\n          }\r\n        }\r\n        // SMOOTH HEIGHT:\r\n        if (slider.vars.smoothHeight) { methods.smoothHeight(slider.vars.animationSpeed); }\r\n      }\r\n    };\r\n    slider.wrapup = function(dimension) {\r\n      // SLIDE:\r\n      if (!fade && !carousel) {\r\n        if (slider.currentSlide === 0 && slider.animatingTo === slider.last && slider.vars.animationLoop) {\r\n          slider.setProps(dimension, \"jumpEnd\");\r\n        } else if (slider.currentSlide === slider.last && slider.animatingTo === 0 && slider.vars.animationLoop) {\r\n          slider.setProps(dimension, \"jumpStart\");\r\n        }\r\n      }\r\n      slider.animating = false;\r\n      slider.currentSlide = slider.animatingTo;\r\n      // API: after() animation Callback\r\n      slider.vars.after(slider);\r\n    };\r\n\r\n    // SLIDESHOW:\r\n    slider.animateSlides = function() {\r\n      if (!slider.animating && focused ) { slider.flexAnimate(slider.getTarget(\"next\")); }\r\n    };\r\n    // SLIDESHOW:\r\n    slider.pause = function() {\r\n      clearInterval(slider.animatedSlides);\r\n      slider.animatedSlides = null;\r\n      slider.playing = false;\r\n      // PAUSEPLAY:\r\n      if (slider.vars.pausePlay) { methods.pausePlay.update(\"play\"); }\r\n      // SYNC:\r\n      if (slider.syncExists) { methods.sync(\"pause\"); }\r\n    };\r\n    // SLIDESHOW:\r\n    slider.play = function() {\r\n      if (slider.playing) { clearInterval(slider.animatedSlides); }\r\n      slider.animatedSlides = slider.animatedSlides || setInterval(slider.animateSlides, slider.vars.slideshowSpeed);\r\n      slider.started = slider.playing = true;\r\n      // PAUSEPLAY:\r\n      if (slider.vars.pausePlay) { methods.pausePlay.update(\"pause\"); }\r\n      // SYNC:\r\n      if (slider.syncExists) { methods.sync(\"play\"); }\r\n    };\r\n    // STOP:\r\n    slider.stop = function () {\r\n      slider.pause();\r\n      slider.stopped = true;\r\n    };\r\n    slider.canAdvance = function(target, fromNav) {\r\n      // ASNAV:\r\n      var last = (asNav) ? slider.pagingCount - 1 : slider.last;\r\n      return (fromNav) ? true :\r\n             (asNav && slider.currentItem === slider.count - 1 && target === 0 && slider.direction === \"prev\") ? true :\r\n             (asNav && slider.currentItem === 0 && target === slider.pagingCount - 1 && slider.direction !== \"next\") ? false :\r\n             (target === slider.currentSlide && !asNav) ? false :\r\n             (slider.vars.animationLoop) ? true :\r\n             (slider.atEnd && slider.currentSlide === 0 && target === last && slider.direction !== \"next\") ? false :\r\n             (slider.atEnd && slider.currentSlide === last && target === 0 && slider.direction === \"next\") ? false :\r\n             true;\r\n    };\r\n    slider.getTarget = function(dir) {\r\n      slider.direction = dir;\r\n      if (dir === \"next\") {\r\n        return (slider.currentSlide === slider.last) ? 0 : slider.currentSlide + 1;\r\n      } else {\r\n        return (slider.currentSlide === 0) ? slider.last : slider.currentSlide - 1;\r\n      }\r\n    };\r\n\r\n    // SLIDE:\r\n    slider.setProps = function(pos, special, dur) {\r\n      var target = (function() {\r\n        var posCheck = (pos) ? pos : ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo,\r\n            posCalc = (function() {\r\n              if (carousel) {\r\n                return (special === \"setTouch\") ? pos :\r\n                       (reverse && slider.animatingTo === slider.last) ? 0 :\r\n                       (reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :\r\n                       (slider.animatingTo === slider.last) ? slider.limit : posCheck;\r\n              } else {\r\n                switch (special) {\r\n                  case \"setTotal\": return (reverse) ? ((slider.count - 1) - slider.currentSlide + slider.cloneOffset) * pos : (slider.currentSlide + slider.cloneOffset) * pos;\r\n                  case \"setTouch\": return (reverse) ? pos : pos;\r\n                  case \"jumpEnd\": return (reverse) ? pos : slider.count * pos;\r\n                  case \"jumpStart\": return (reverse) ? slider.count * pos : pos;\r\n                  default: return pos;\r\n                }\r\n              }\r\n            }());\r\n\r\n            return (posCalc * -1) + \"px\";\r\n          }());\r\n\r\n      if (slider.transitions) {\r\n        target = (vertical) ? \"translate3d(0,\" + target + \",0)\" : \"translate3d(\" + target + \",0,0)\";\r\n        dur = (dur !== undefined) ? (dur/1000) + \"s\" : \"0s\";\r\n        slider.container.css(\"-\" + slider.pfx + \"-transition-duration\", dur);\r\n         slider.container.css(\"transition-duration\", dur);\r\n      }\r\n\r\n      slider.args[slider.prop] = target;\r\n      if (slider.transitions || dur === undefined) { slider.container.css(slider.args); }\r\n\r\n      slider.container.css('transform',target);\r\n    };\r\n\r\n    slider.setup = function(type) {\r\n      // SLIDE:\r\n      if (!fade) {\r\n        var sliderOffset, arr;\r\n\r\n        if (type === \"init\") {\r\n          slider.viewport = $('<div class=\"' + namespace + 'viewport\"></div>').css({\"overflow\": \"hidden\", \"position\": \"relative\"}).appendTo(slider).append(slider.container);\r\n          // INFINITE LOOP:\r\n          slider.cloneCount = 0;\r\n          slider.cloneOffset = 0;\r\n          // REVERSE:\r\n          if (reverse) {\r\n            arr = $.makeArray(slider.slides).reverse();\r\n            slider.slides = $(arr);\r\n            slider.container.empty().append(slider.slides);\r\n          }\r\n        }\r\n        // INFINITE LOOP && !CAROUSEL:\r\n        if (slider.vars.animationLoop && !carousel) {\r\n          slider.cloneCount = 2;\r\n          slider.cloneOffset = 1;\r\n          // clear out old clones\r\n          if (type !== \"init\") { slider.container.find('.clone').remove(); }\r\n          slider.container.append(methods.uniqueID(slider.slides.first().clone().addClass('clone')).attr('aria-hidden', 'true'))\r\n                          .prepend(methods.uniqueID(slider.slides.last().clone().addClass('clone')).attr('aria-hidden', 'true'));\r\n        }\r\n        slider.newSlides = $(slider.vars.selector, slider);\r\n\r\n        sliderOffset = (reverse) ? slider.count - 1 - slider.currentSlide + slider.cloneOffset : slider.currentSlide + slider.cloneOffset;\r\n        // VERTICAL:\r\n        if (vertical && !carousel) {\r\n          slider.container.height((slider.count + slider.cloneCount) * 200 + \"%\").css(\"position\", \"absolute\").width(\"100%\");\r\n          setTimeout(function(){\r\n            slider.newSlides.css({\"display\": \"block\"});\r\n            slider.doMath();\r\n            slider.viewport.height(slider.h);\r\n            slider.setProps(sliderOffset * slider.h, \"init\");\r\n          }, (type === \"init\") ? 100 : 0);\r\n        } else {\r\n          slider.container.width((slider.count + slider.cloneCount) * 200 + \"%\");\r\n          slider.setProps(sliderOffset * slider.computedW, \"init\");\r\n          setTimeout(function(){\r\n            slider.doMath();\r\n            slider.newSlides.css({\"width\": slider.computedW, \"float\": \"left\", \"display\": \"block\"});\r\n            // SMOOTH HEIGHT:\r\n            if (slider.vars.smoothHeight) { methods.smoothHeight(); }\r\n          }, (type === \"init\") ? 100 : 0);\r\n        }\r\n      } else { // FADE:\r\n        slider.slides.css({\"width\": \"100%\", \"float\": \"left\", \"marginRight\": \"-100%\", \"position\": \"relative\"});\r\n        if (type === \"init\") {\r\n          if (!touch) {\r\n            //slider.slides.eq(slider.currentSlide).fadeIn(slider.vars.animationSpeed, slider.vars.easing);\r\n            if (slider.vars.fadeFirstSlide == false) {\r\n              slider.slides.css({ \"opacity\": 0, \"display\": \"block\", \"zIndex\": 1 }).eq(slider.currentSlide).css({\"zIndex\": 2}).css({\"opacity\": 1});\r\n            } else {\r\n              slider.slides.css({ \"opacity\": 0, \"display\": \"block\", \"zIndex\": 1 }).eq(slider.currentSlide).css({\"zIndex\": 2}).animate({\"opacity\": 1},slider.vars.animationSpeed,slider.vars.easing);\r\n            }\r\n          } else {\r\n            slider.slides.css({ \"opacity\": 0, \"display\": \"block\", \"webkitTransition\": \"opacity \" + slider.vars.animationSpeed / 1000 + \"s ease\", \"zIndex\": 1 }).eq(slider.currentSlide).css({ \"opacity\": 1, \"zIndex\": 2});\r\n          }\r\n        }\r\n        // SMOOTH HEIGHT:\r\n        if (slider.vars.smoothHeight) { methods.smoothHeight(); }\r\n      }\r\n      // !CAROUSEL:\r\n      // CANDIDATE: active slide\r\n      if (!carousel) { slider.slides.removeClass(namespace + \"active-slide\").eq(slider.currentSlide).addClass(namespace + \"active-slide\"); }\r\n\r\n      //FlexSlider: init() Callback\r\n      slider.vars.init(slider);\r\n    };\r\n\r\n    slider.doMath = function() {\r\n      var slide = slider.slides.first(),\r\n          slideMargin = slider.vars.itemMargin,\r\n          minItems = slider.vars.minItems,\r\n          maxItems = slider.vars.maxItems;\r\n\r\n      slider.w = (slider.viewport===undefined) ? slider.width() : slider.viewport.width();\r\n      slider.h = slide.height();\r\n      slider.boxPadding = slide.outerWidth() - slide.width();\r\n\r\n      // CAROUSEL:\r\n      if (carousel) {\r\n        slider.itemT = slider.vars.itemWidth + slideMargin;\r\n        slider.minW = (minItems) ? minItems * slider.itemT : slider.w;\r\n        slider.maxW = (maxItems) ? (maxItems * slider.itemT) - slideMargin : slider.w;\r\n        slider.itemW = (slider.minW > slider.w) ? (slider.w - (slideMargin * (minItems - 1)))/minItems :\r\n                       (slider.maxW < slider.w) ? (slider.w - (slideMargin * (maxItems - 1)))/maxItems :\r\n                       (slider.vars.itemWidth > slider.w) ? slider.w : slider.vars.itemWidth;\r\n\r\n        slider.visible = Math.floor(slider.w/(slider.itemW));\r\n        slider.move = (slider.vars.move > 0 && slider.vars.move < slider.visible ) ? slider.vars.move : slider.visible;\r\n        slider.pagingCount = Math.ceil(((slider.count - slider.visible)/slider.move) + 1);\r\n        slider.last =  slider.pagingCount - 1;\r\n        slider.limit = (slider.pagingCount === 1) ? 0 :\r\n                       (slider.vars.itemWidth > slider.w) ? (slider.itemW * (slider.count - 1)) + (slideMargin * (slider.count - 1)) : ((slider.itemW + slideMargin) * slider.count) - slider.w - slideMargin;\r\n      } else {\r\n        slider.itemW = slider.w;\r\n        slider.pagingCount = slider.count;\r\n        slider.last = slider.count - 1;\r\n      }\r\n      slider.computedW = slider.itemW - slider.boxPadding;\r\n    };\r\n\r\n    slider.update = function(pos, action) {\r\n      slider.doMath();\r\n\r\n      // update currentSlide and slider.animatingTo if necessary\r\n      if (!carousel) {\r\n        if (pos < slider.currentSlide) {\r\n          slider.currentSlide += 1;\r\n        } else if (pos <= slider.currentSlide && pos !== 0) {\r\n          slider.currentSlide -= 1;\r\n        }\r\n        slider.animatingTo = slider.currentSlide;\r\n      }\r\n\r\n      // update controlNav\r\n      if (slider.vars.controlNav && !slider.manualControls) {\r\n        if ((action === \"add\" && !carousel) || slider.pagingCount > slider.controlNav.length) {\r\n          methods.controlNav.update(\"add\");\r\n        } else if ((action === \"remove\" && !carousel) || slider.pagingCount < slider.controlNav.length) {\r\n          if (carousel && slider.currentSlide > slider.last) {\r\n            slider.currentSlide -= 1;\r\n            slider.animatingTo -= 1;\r\n          }\r\n          methods.controlNav.update(\"remove\", slider.last);\r\n        }\r\n      }\r\n      // update directionNav\r\n      if (slider.vars.directionNav) { methods.directionNav.update(); }\r\n\r\n    };\r\n\r\n    slider.addSlide = function(obj, pos) {\r\n      var $obj = $(obj);\r\n\r\n      slider.count += 1;\r\n      slider.last = slider.count - 1;\r\n\r\n      // append new slide\r\n      if (vertical && reverse) {\r\n        (pos !== undefined) ? slider.slides.eq(slider.count - pos).after($obj) : slider.container.prepend($obj);\r\n      } else {\r\n        (pos !== undefined) ? slider.slides.eq(pos).before($obj) : slider.container.append($obj);\r\n      }\r\n\r\n      // update currentSlide, animatingTo, controlNav, and directionNav\r\n      slider.update(pos, \"add\");\r\n\r\n      // update slider.slides\r\n      slider.slides = $(slider.vars.selector + ':not(.clone)', slider);\r\n      // re-setup the slider to accomdate new slide\r\n      slider.setup();\r\n\r\n      //FlexSlider: added() Callback\r\n      slider.vars.added(slider);\r\n    };\r\n    slider.removeSlide = function(obj) {\r\n      var pos = (isNaN(obj)) ? slider.slides.index($(obj)) : obj;\r\n\r\n      // update count\r\n      slider.count -= 1;\r\n      slider.last = slider.count - 1;\r\n\r\n      // remove slide\r\n      if (isNaN(obj)) {\r\n        $(obj, slider.slides).remove();\r\n      } else {\r\n        (vertical && reverse) ? slider.slides.eq(slider.last).remove() : slider.slides.eq(obj).remove();\r\n      }\r\n\r\n      // update currentSlide, animatingTo, controlNav, and directionNav\r\n      slider.doMath();\r\n      slider.update(pos, \"remove\");\r\n\r\n      // update slider.slides\r\n      slider.slides = $(slider.vars.selector + ':not(.clone)', slider);\r\n      // re-setup the slider to accomdate new slide\r\n      slider.setup();\r\n\r\n      // FlexSlider: removed() Callback\r\n      slider.vars.removed(slider);\r\n    };\r\n\r\n    //FlexSlider: Initialize\r\n    methods.init();\r\n  };\r\n\r\n  // Ensure the slider isn't focussed if the window loses focus.\r\n  $( window ).blur( function ( e ) {\r\n    focused = false;\r\n  }).focus( function ( e ) {\r\n    focused = true;\r\n  });\r\n\r\n  //FlexSlider: Default Settings\r\n  $.flexslider.defaults = {\r\n    namespace: \"flex-\",             //{NEW} String: Prefix string attached to the class of every element generated by the plugin\r\n    selector: \".slides > li\",       //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril\r\n    animation: \"fade\",              //String: Select your animation type, \"fade\" or \"slide\"\r\n    easing: \"swing\",                //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!\r\n    direction: \"horizontal\",        //String: Select the sliding direction, \"horizontal\" or \"vertical\"\r\n    reverse: false,                 //{NEW} Boolean: Reverse the animation direction\r\n    animationLoop: true,            //Boolean: Should the animation loop? If false, directionNav will received \"disable\" classes at either end\r\n    smoothHeight: false,            //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode\r\n    startAt: 0,                     //Integer: The slide that the slider should start on. Array notation (0 = first slide)\r\n    slideshow: true,                //Boolean: Animate slider automatically\r\n    slideshowSpeed: 7000,           //Integer: Set the speed of the slideshow cycling, in milliseconds\r\n    animationSpeed: 600,            //Integer: Set the speed of animations, in milliseconds\r\n    initDelay: 0,                   //{NEW} Integer: Set an initialization delay, in milliseconds\r\n    randomize: false,               //Boolean: Randomize slide order\r\n    fadeFirstSlide: true,           //Boolean: Fade in the first slide when animation type is \"fade\"\r\n    thumbCaptions: false,           //Boolean: Whether or not to put captions on thumbnails when using the \"thumbnails\" controlNav.\r\n\r\n    // Usability features\r\n    pauseOnAction: true,            //Boolean: Pause the slideshow when interacting with control elements, highly recommended.\r\n    pauseOnHover: false,            //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering\r\n    pauseInvisible: true,   \t\t//{NEW} Boolean: Pause the slideshow when tab is invisible, resume when visible. Provides better UX, lower CPU usage.\r\n    useCSS: true,                   //{NEW} Boolean: Slider will use CSS3 transitions if available\r\n    touch: true,                    //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices\r\n    video: false,                   //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches\r\n\r\n    // Primary Controls\r\n    controlNav: true,               //Boolean: Create navigation for paging control of each slide? Note: Leave true for manualControls usage\r\n    directionNav: true,             //Boolean: Create navigation for previous/next navigation? (true/false)\r\n    prevText: \"Previous\",           //String: Set the text for the \"previous\" directionNav item\r\n    nextText: \"Next\",               //String: Set the text for the \"next\" directionNav item\r\n\r\n    // Secondary Navigation\r\n    keyboard: true,                 //Boolean: Allow slider navigating via keyboard left/right keys\r\n    multipleKeyboard: false,        //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.\r\n    mousewheel: false,              //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel\r\n    pausePlay: false,               //Boolean: Create pause/play dynamic element\r\n    pauseText: \"Pause\",             //String: Set the text for the \"pause\" pausePlay item\r\n    playText: \"Play\",               //String: Set the text for the \"play\" pausePlay item\r\n\r\n    // Special properties\r\n    controlsContainer: \"\",          //{UPDATED} jQuery Object/Selector: Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be $(\".flexslider-container\"). Property is ignored if given element is not found.\r\n    manualControls: \"\",             //{UPDATED} jQuery Object/Selector: Declare custom control navigation. Examples would be $(\".flex-control-nav li\") or \"#tabs-nav li img\", etc. The number of elements in your controlNav should match the number of slides/tabs.\r\n    sync: \"\",                       //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.\r\n    asNavFor: \"\",                   //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider\r\n\r\n    // Carousel Options\r\n    itemWidth: 0,                   //{NEW} Integer: Box-model width of individual carousel items, including horizontal borders and padding.\r\n    itemMargin: 0,                  //{NEW} Integer: Margin between carousel items.\r\n    minItems: 1,                    //{NEW} Integer: Minimum number of carousel items that should be visible. Items will resize fluidly when below this.\r\n    maxItems: 0,                    //{NEW} Integer: Maxmimum number of carousel items that should be visible. Items will resize fluidly when above this limit.\r\n    move: 0,                        //{NEW} Integer: Number of carousel items that should move on animation. If 0, slider will move all visible items.\r\n    allowOneSlide: true,           //{NEW} Boolean: Whether or not to allow a slider comprised of a single slide\r\n\r\n    // Callback API\r\n    start: function(){},            //Callback: function(slider) - Fires when the slider loads the first slide\r\n    before: function(){},           //Callback: function(slider) - Fires asynchronously with each slider animation\r\n    after: function(){},            //Callback: function(slider) - Fires after each slider animation completes\r\n    end: function(){},              //Callback: function(slider) - Fires when the slider reaches the last slide (asynchronous)\r\n    added: function(){},            //{NEW} Callback: function(slider) - Fires after a slide is added\r\n    removed: function(){},           //{NEW} Callback: function(slider) - Fires after a slide is removed\r\n    init: function() {}             //{NEW} Callback: function(slider) - Fires after the slider is initially setup\r\n  };\r\n\r\n  //FlexSlider: Plugin Function\r\n  $.fn.flexslider = function(options) {\r\n    if (options === undefined) { options = {}; }\r\n\r\n    if (typeof options === \"object\") {\r\n      return this.each(function() {\r\n        var $this = $(this),\r\n            selector = (options.selector) ? options.selector : \".slides > li\",\r\n            $slides = $this.find(selector);\r\n\r\n      if ( ( $slides.length === 1 && options.allowOneSlide === true ) || $slides.length === 0 ) {\r\n          $slides.fadeIn(400);\r\n          if (options.start) { options.start($this); }\r\n        } else if ($this.data('flexslider') === undefined) {\r\n          new $.flexslider(this, options);\r\n        }\r\n      });\r\n    } else {\r\n      // Helper strings to quickly perform functions on the slider\r\n      var $slider = $(this).data('flexslider');\r\n      switch (options) {\r\n        case \"play\": $slider.play(); break;\r\n        case \"pause\": $slider.pause(); break;\r\n        case \"stop\": $slider.stop(); break;\r\n        case \"next\": $slider.flexAnimate($slider.getTarget(\"next\"), true); break;\r\n        case \"prev\":\r\n        case \"previous\": $slider.flexAnimate($slider.getTarget(\"prev\"), true); break;\r\n        default: if (typeof options === \"number\") { $slider.flexAnimate(options, true); }\r\n      }\r\n    }\r\n  };\r\n})(jQuery);"],"sourceRoot":"/source/"}